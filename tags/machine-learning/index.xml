<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machine Learning on pramana's blog</title><link>https://pr4-kp.github.io/tags/machine-learning/</link><description>Recent content in Machine Learning on pramana's blog</description><generator>Hugo</generator><language>en-us</language><copyright>Â© Pramana</copyright><lastBuildDate>Tue, 23 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://pr4-kp.github.io/tags/machine-learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Can a machine learn mathematical structure?</title><link>https://pr4-kp.github.io/posts/machine-learning-sl2z/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://pr4-kp.github.io/posts/machine-learning-sl2z/</guid><description>&lt;p&gt;When I think of machine learning, I tend to think about &lt;strong&gt;estimation&lt;/strong&gt;; a machine learning algorithm is a method of estimating a function given a (usually large) set of data. As a result, I&amp;rsquo;ve primarily seen machine learning used when the function we are trying to estimate is assumed to be continuous (or differentiable, smooth, etc.), because then you can use nice results from analysis to prove convergence. But algebraic structures like &lt;a href="https://en.wikipedia.org/wiki/Group_theory"&gt;&lt;strong&gt;groups&lt;/strong&gt;&lt;/a&gt; can be discrete objects, where there is no way to smoothly interpolate between two group elements. Moreover, groups adhere to very strict rules that dictate how they can be studied, which makes this continuous way of thinking hard to apply &amp;ndash; I mean, it&amp;rsquo;s hard to imagine that a machine learning model, just armed with data about groups, functions between them, and some backpropagation, could reach the &lt;a href="https://en.wikipedia.org/wiki/Isomorphism_theorems"&gt;isomorphism theorems&lt;/a&gt;. Despite this, the research I did last semester opened my mind more to using classical machine learning methods to get structure of discrete groups, given that we ask train the machine on the right questions.&lt;/p&gt;</description></item></channel></rss>